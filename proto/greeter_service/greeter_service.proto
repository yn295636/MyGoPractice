syntax = "proto3";

package greeter_service;

// The greeting service definition.
service Greeter {
    // Sends a greeting
    rpc SayHello (HelloRequest) returns (HelloReply) {
    }
    rpc StoreInMongo (StoreInMongoRequest) returns (StoreInMongoReply) {
    }
    rpc StoreInRedis (StoreInRedisRequest) returns (StoreInRedisReply) {
    }
    rpc GetFromRedis (GetFromRedisRequest) returns (GetFromRedisReply) {
    }
    rpc StoreUserInDb (StoreUserInDbRequest) returns (StoreUserInDbReply) {
    }
    rpc StorePhoneInDb (StorePhoneInDbRequest) returns (StorePhoneInDbReply) {
    }
    rpc GetUserFromDb (GetUserFromDbRequest) returns (GetUserFromDbReply) {
    }
}

// The request message containing the user's name.
message HelloRequest {
    string name = 1;
}

// The response message containing the greetings
message HelloReply {
    string message = 1;
}

// The request message containing json string
message StoreInMongoRequest {
    string data = 1;
}

// The response message for store in mongo success/fail
message StoreInMongoReply {
    int32 result = 1;
}

message StoreInRedisRequest {
    string key = 1;
    string value = 2;
}

message StoreInRedisReply {
    int32 result = 1;
}

message GetFromRedisRequest {
    string key = 1;
}

message GetFromRedisReply {
    string value = 1;
}

message StoreUserInDbRequest {
    string username = 1;
    int32 gender = 2;
    int32 age = 3;
    int32 externalUid = 4;
}

message StoreUserInDbReply {
    int64 uid = 1;
}

message StorePhoneInDbRequest {
    string phone = 1;
    int64 uid = 2;
}

message StorePhoneInDbReply {
    int64 id = 1;
}

message GetUserFromDbRequest {
    int64 uid = 1;
}

message GetUserFromDbReply {
    int64 uid = 1;
    string username = 2;
    int32 gender = 3;
    int32 age = 4;
    int32 externalUid = 5;
}